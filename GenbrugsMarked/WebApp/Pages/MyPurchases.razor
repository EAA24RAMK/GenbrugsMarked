@page "/my-purchases"
@using Core.Models
@using WebApp.Services
@inject UserService UserService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Mine Indkøb</h3>

@if (requests == null)
{
    <p>Indlæser...</p>
}
else if (!requests.Any())
{
    <p>Du har ikke sendt nogen købsanmodninger endnu</p>
}
else
{
    <ul class="list-group">
        @foreach (var req in requests)
        {
            var sale = allSales.FirstOrDefault(s => s.SalesId == req.SalesId);
            var seller = allUsers.FirstOrDefault(u => u.Id == req.SellerUserId);
            
            <li class="list-group-item">
                <strong>Annonce:</strong> @(sale != null ? sale.Title : "Din egen annonce") <br />
                <strong>Sælger:</strong> @(sale != null ? seller.Name : "Du har selv anmodet om at købe denne vare") <br />
                <strong>Status:</strong> @req.Status <br />
                <strong>Dato:</strong> @req.Date <br />
            </li>
        }
    </ul>
}

@code {
    private List<PurchaseRequest>? requests;
    private List<User> allUsers = new();
    private List<Sale> allSales = new();

    protected override async Task OnInitializedAsync()
    {
        var user = await LocalStorage.GetItemAsync<User>("loggedInUser");
        if (user != null)
        {
            requests = await UserService.GetRequestsForBuyerAsync(user.Id!);
            allUsers = await UserService.GetAllUsersAsync();
            allSales = await UserService.GetActiveSalesAsync();
        }
    }

}