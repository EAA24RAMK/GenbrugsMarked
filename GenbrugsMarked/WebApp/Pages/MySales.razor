@page "/my-sales"
@using Core.Models
@using WebApp.Services
@inject UserService UserService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Mine Annoncer</h3>

@if (user == null)
{
    <p>Indl√¶ser bruger...</p>
}
else
{
    <ul class="list-group">
        @foreach (var sale in user.Sales)
        {
            <li class="list-group-item">
                <strong>@sale.Title</strong> ‚Äì @sale.Price kr.
                <p>@sale.Description</p>
                <p>Status: @sale.Status</p>

                @if (myRequests.Any(r => r.SalesId == sale.SalesId))
                {
                    <p><em>Anmodninger:</em></p>
                    <ul>
                        @foreach (var req in myRequests.Where(r => r.SalesId == sale.SalesId))
                        {
                            <li>
                                K√∏ber-ID: @req.BuyerUserId ‚Äì Status: @req.Status ‚Äì Dato: @req.Date.ToShortDateString()
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p><em>Ingen anmodninger endnu.</em></p>
                }
            </li>
        }
    </ul>
}

<h4>Opret ny annonce</h4>
<input @bind="newSale.Title" placeholder="Titel" />
<input @bind="newSale.Description" placeholder="Beskrivelse" />
<input @bind="newSale.Price" type="number" placeholder="Pris" />
<button @onclick="CreateSale">Opret annonce</button>

@code {
    private User? user;
    private Sale newSale = new Sale();
    private List<PurchaseRequest> myRequests = new();

    protected override async Task OnInitializedAsync()
    {
        user = await LocalStorage.GetItemAsync<User>("loggedInUser");
        if (user != null)
        {
            user = await UserService.LoginAsync(user.Email, user.Password);
            myRequests = await UserService.GetRequestsForSellerAsync(user.Id!);
            Console.WriteLine($"üîç Anmodninger hentet: {myRequests.Count}");
        }
    }

    private async Task CreateSale()
    {
        newSale.CreatedDate = DateTime.Now;
        newSale.Status = "Aktiv";
        newSale.UserId = user.Id!;
        newSale.ImageUrl = ""; // Tilf√∏j senere
        newSale.RoomId = 1; //midlertidigt
        newSale.SalesId = new Random().Next(1000, 9999); // midlertidigt

        if (user != null)
        {
            var updatedUser = await UserService.AddSaleAsync(user.Id!, newSale);
            user = updatedUser;
            newSale = new Sale(); // ryd formular
        }
    }

}