@page "/market"
@using Core.Models
@using WebApp.Services
@inject UserService UserService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Marked – Aktive Annoncer</h3>

<input @bind="SearchTerm" placeholder="Søg efter titel eller beskrivelse" class="form-control mb-3" />

@if (!string.IsNullOrWhiteSpace(searchTerm))
{
    <button class="btn btn-sm btn-secondary mb-3" @onclick="() => SearchTerm = string.Empty">Ryd søgning</button>
}

@if (filteredSales == null)
{
    <p>Indlæser annoncer...</p>
}
else if (filteredSales.Count == 0)
{
    <p>Ingen annoncer matcher din søgning.</p>
}
else
{
    <ul class="list-group">
        @foreach (var sale in filteredSales)
        {
            <li class="list-group-item">
                <strong>@sale.Title</strong> – @sale.Price kr.
                <p>@sale.Description</p>
                <p>Status: @sale.Status</p>

                <button class="btn btn-sm btn-primary" @onclick="() => RequestPurchase(sale)">Anmod om køb</button>
            </li>
        }
    </ul>
}

@code {
    private List<Sale>? allSales;
    private List<Sale>? filteredSales;
    private string searchTerm = "";

    private string SearchTerm
    {
        get => searchTerm;
        set
        {
            searchTerm = value;
            FilterSales();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        allSales = await UserService.GetActiveSalesAsync();
        FilterSales();
    }

    private void FilterSales()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredSales = allSales;
        }
        else
        {
            var term = searchTerm.ToLower();
            filteredSales = allSales?
                .Where(s =>
                    (!string.IsNullOrEmpty(s.Title) && s.Title.ToLower().Contains(term)) ||
                    (!string.IsNullOrEmpty(s.Description) && s.Description.ToLower().Contains(term)))
                .ToList();
        }
    }

    private async Task RequestPurchase(Sale sale)
    {
        var buyer = await LocalStorage.GetItemAsync<User>("loggedInUser");
        if (buyer == null)
        {
            Console.WriteLine("Bruger ikke logget ind.");
            return;
        }

        var request = new PurchaseRequest
        {
            BuyerUserId = buyer.Id!,
            SellerUserId = sale.UserId,
            SalesId = sale.SalesId,
            Date = DateTime.Now,
            Status = "Venter"
        };
        
        var success = await UserService.SendPurchaseRequestAsync(request);
        if (success)
        {
            Console.WriteLine("Anmodning sendt!");
        }
        else
        {
            Console.WriteLine("Noget gik galt.");
        }
    }
    
}